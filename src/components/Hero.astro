---
import ButtonPrimary from "../components/ButtonPrimary.astro";
import ButtonSecondary from "../components/ButtonSecondary.astro";

interface Props {
  titleLine1?: string;
  titleLine2?: string;
  subtitle?: string;
  primaryLabel?: string;
  primaryHref?: string;
  secondaryLabel?: string;
  secondaryHref?: string;
}

const {
  titleLine1 = "Curated AI Recipes,",
  titleLine2 = "Ready to Ship",
  subtitle = "Playbooks that actually save time. No fluff — just repeatable workflows.",
  primaryLabel = "Explore Recipes",
  primaryHref = "/recipes",
  secondaryLabel = "How it works",
  secondaryHref = "/about",
} = Astro.props as Props;
---

<section class="relative overflow-hidden pt-16 pb-14">
  <div class="max-w-6xl mx-auto px-5 grid gap-10 md:grid-cols-2 items-center">
    
    <!-- LEFT -->
    <div class="col-span-1 min-w-0 relative z-10 fade-in-up">
      <h1 class="font-display tracking-tight leading-tight">
        <span class="block text-4xl sm:text-5xl md:text-6xl text-secondary">
          {titleLine1}
        </span>
        <span
          class="block mt-1 text-4xl sm:text-5xl md:text-6xl bg-gradient-to-r from-gradientStart to-gradientEnd bg-clip-text text-transparent shine"
          title={titleLine2}
        >
          {titleLine2}
        </span>
      </h1>

      <p class="mt-6 text-lg text-slate-600 max-w-xl">
        {subtitle}
      </p>

      <div class="mt-6 flex flex-wrap gap-4">
        <a href={primaryHref} class="px-5 py-3 rounded-lg bg-accent text-white font-semibold hover:shadow-lg transition focus:outline-none focus:ring-2 focus:ring-accent/50">
          {primaryLabel}
        </a>
        <a href={secondaryHref} class="px-5 py-3 rounded-lg border border-slate-200 hover:bg-slate-50 transition focus:outline-none focus:ring-2 focus:ring-slate-300">
          {secondaryLabel}
        </a>
      </div>
    </div>

    <!-- RIGHT -->
    <div class="col-span-1 min-w-0 relative z-0 fade-in-up delay-150 hidden md:block">
      <!-- simple decorative SVG -->
      <svg viewBox="0 0 400 300" class="w-full h-auto">
        <defs>
          <linearGradient id="g" x1="0" x2="1">
            <stop offset="0%" stop-color="currentColor" />
            <stop offset="100%" stop-color="currentColor" />
          </linearGradient>
        </defs>
        <g fill="none" stroke="url(#g)" stroke-opacity="0.25">
          <circle cx="60" cy="60" r="40" />
          <circle cx="140" cy="80" r="30" />
          <circle cx="260" cy="120" r="50" />
          <circle cx="330" cy="60" r="25" />
          <path d="M40 220 C120 140, 220 180, 360 220" />
        </g>
      </svg>
    </div>
  </div>
</section>

<style>
/* Одноразовое появление */
@keyframes k-fade-in-up {
  from { opacity: 0; transform: translateY(10px); }
  to   { opacity: 1; transform: translateY(0); }
}
.fade-in-up { animation: k-fade-in-up .6s ease-out both; }
.delay-150 { animation-delay: .15s; }

/* Shine по hover (только “внутри” текста, без движения строки) */
.shine {
  position: relative;
  background-size: 100% 100%;
}
.shine::after {
  content: "";
  position: absolute; inset: 0;
  background: linear-gradient(120deg, transparent 0%, rgba(255,255,255,.65) 50%, transparent 100%);
  transform: translateX(-110%);
  opacity: 0;
  pointer-events: none;
  transition: opacity .15s ease-out;
}
.shine:hover::after {
  opacity: 1;
  animation: k-shine 1s ease-out forwards;
}
@keyframes k-shine {
  from { transform: translateX(-110%); }
  to   { transform: translateX(110%); }
}

/* Уважение prefers-reduced-motion */
@media (prefers-reduced-motion: reduce){
  .fade-in-up { animation: none; }
  .shine::after, .shine:hover::after { animation: none; }
}
</style>
