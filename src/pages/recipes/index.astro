---
import { getCollection } from "astro:content";

const all = await getCollection("recipes", ({ data }) => data.published !== false);

// Список категорий из твоей схемы (подогнано под твой config.ts)
const categories = ["image","video","text","audio","business","automation"];
---

<html lang="ru">
  <head>
    <meta charset="utf-8" />
    <title>Рецепты — AssortiAI</title>
    <meta name="description" content="Каталог AI-рецептов: фильтры по категории и ETA." />
  </head>
  <body class="bg-zinc-50">
    <main class="mx-auto max-w-6xl px-4 py-8">
      <h1 class="text-3xl font-extrabold">Рецепты</h1>

      <section class="mt-5 flex flex-wrap gap-3 items-center">
        <select id="category" class="border rounded-lg px-3 py-2">
          <option value="">Все категории</option>
          {categories.map(c => <option value={c}>{c}</option>)}
        </select>

        <select id="eta" class="border rounded-lg px-3 py-2">
          <option value="">Любая длительность</option>
          <option value="10">≤ 10 мин</option>
          <option value="20">≤ 20 мин</option>
          <option value="30">≤ 30 мин</option>
          <option value="60">≤ 60 мин</option>
        </select>

        <input id="q" placeholder="Поиск по названию..." class="border rounded-lg px-3 py-2 flex-1 min-w-[200px]" />
      </section>

      <section id="grid" class="mt-6 grid gap-6 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3">
        {all.map(({ data }) => (
          <a
            data-item
            data-category={data.category}
            data-eta={String(data.eta ?? "")}
            data-title={(data.title || "").toLowerCase()}
            href={`/recipes/${data.slug}/`}
            class="block rounded-2xl border border-zinc-200 shadow-sm hover:shadow-md transition p-4 bg-white"
          >
            {data.cover && (
              <img src={data.cover} alt={data.title} class="w-full h-40 object-cover rounded-xl mb-3" loading="lazy" />
            )}
            <div class="flex items-center justify-between mb-1">
              <h3 class="text-lg font-semibold">{data.title}</h3>
              {data.eta && <span class="text-xs px-2 py-1 rounded bg-zinc-100">{data.eta}m</span>}
            </div>
            <p class="text-sm text-zinc-600 line-clamp-3">{data.description}</p>
            {data.category && <div class="mt-3 text-xs uppercase tracking-wide text-zinc-500">{data.category}</div>}
          </a>
        ))}
      </section>
    </main>

    <script is:inline>
      const grid = document.getElementById('grid');
      const cat = document.getElementById('category');
      const eta = document.getElementById('eta');
      const q   = document.getElementById('q');

      const apply = () => {
        const c = (cat.value || '').toLowerCase();
        const e = parseInt(eta.value || '0', 10);
        const text = (q.value || '').trim().toLowerCase();

        grid.querySelectorAll('[data-item]').forEach(card => {
          const cardCat = (card.getAttribute('data-category') || '').toLowerCase();
          const cardEta = parseInt(card.getAttribute('data-eta') || '0', 10);
          const title   = (card.getAttribute('data-title') || '');

          let ok = true;
          if (c && cardCat !== c) ok = false;
          if (e && (!cardEta || cardEta > e)) ok = false;
          if (text && !title.includes(text)) ok = false;

          card.style.display = ok ? '' : 'none';
        });
      };

      [cat, eta, q].forEach(el => el && el.addEventListener('input', apply));
    </script>
  </body>
</html>
